{"version":3,"sources":["webpack:///./library/reactions/src/reaction-core/reaction-core.service.ts","webpack:///./library/reactions/src/reaction-event/reaction-event.ts","webpack:///./library/reactions/src/reaction-keyboard/reaction-keyboard.service.ts","webpack:///./library/reactions/src/reaction-model/reaction-model.directive.ts","webpack:///./library/reactions/src/reaction-snapshots/reaction-snapshot.pipe.ts","webpack:///./library/reactions/src/reaction-snapshots/reaction-snapshot.ts","webpack:///./library/reactions/src/reaction-state/reaction-state.ts","webpack:///./library/reactions/src/reaction-text/reaction-text.component.scss","webpack:///./library/reactions/src/reaction-text/reaction-text.component.ts","webpack:///./library/reactions/src/reaction-utils/combine-events.ts","webpack:///./library/reactions/src/reaction-utils/hydrate-reaction.ts","webpack:///./library/reactions/src/reaction-utils/observables.ts","webpack:///./library/reactions/src/reaction-utils/reaction-value.ts","webpack:///./library/reactions/src/reaction/reaction-description.ts","webpack:///./library/reactions/src/reaction/reaction-disabled.ts","webpack:///./library/reactions/src/reaction/reaction-icon.ts","webpack:///./library/reactions/src/reaction/reaction-order.ts","webpack:///./library/reactions/src/reaction/reaction-style.ts","webpack:///./library/reactions/src/reaction/reaction-title.ts","webpack:///./library/reactions/src/reaction/reaction-tooltip.ts","webpack:///./library/reactions/src/reaction/reaction-visible.ts","webpack:///./library/reactions/src/reaction/reaction.ts","webpack:///./library/reactions/src/reactions.module.ts","webpack:///./library/reactions/src/reaction-text/reaction-text.component.html","webpack:///./src/app/demo-card/demo-card.component.html","webpack:///./src/app/demo/demo.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/demo-card/demo-card.component.scss","webpack:///./src/app/demo-card/demo-card.component.ts","webpack:///./src/app/demo/demo.component.scss","webpack:///./src/app/demo/demo.component.ts","webpack:///./src/app/reactions/create-reaction/create-reaction.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {ElementRef, Inject, Injectable, OnDestroy, ViewContainerRef} from '@angular/core';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {catchError, defaultIfEmpty, distinctUntilChanged, first, map, mapTo, takeUntil} from 'rxjs/operators';\nimport {ReactionEvent} from '../reaction-event/reaction-event';\nimport {ReactionKeyboardService} from '../reaction-keyboard/reaction-keyboard.service';\nimport {disabledWhen} from '../reaction-utils/observables';\nimport {ReactionObject} from '../reaction/reaction';\n\n/**\n * UI events are broadcast from this service and reactions can act upon those events. Events are things like mouse events, keyboard\n * events, etc.. etc..\n *\n * @dynamic\n */\n@Injectable({providedIn: 'root'})\nexport class ReactionCoreService implements OnDestroy {\n    /**\n     * All of the reaction events.\n     */\n    public readonly events$: Observable<ReactionEvent>;\n\n    /**\n     * Destruction event\n     */\n    private readonly _destroyed$: Subject<void> = new Subject();\n\n    /**\n     * Disabled when above zero. Increments and decrements to support nested disabling.\n     */\n    private readonly _disabled$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n    /**\n     * Emits if reactions are disabled.\n     */\n    public readonly disabled$: Observable<boolean> = this._disabled$.pipe(\n        map(value => value > 0),\n        distinctUntilChanged()\n    );\n\n    /**\n     * Emitter of the events.\n     */\n    private readonly _events$: Subject<ReactionEvent>;\n\n    /**\n     * Constructor\n     */\n    public constructor(@Inject(DOCUMENT) private _doc: Document,\n                       private _keyboard: ReactionKeyboardService) {\n        this._events$ = new Subject<ReactionEvent>();\n        this.events$ = this._events$.pipe(\n            takeUntil(this._destroyed$)\n        );\n        this.events$.pipe(\n            takeUntil(this._destroyed$)\n        ).subscribe(event => {\n            const hook = event.reaction.__REACTION__.find(hook => hook.type === event.type);\n            if (hook) {\n                hook.method(event);\n            }\n        });\n    }\n\n    /**\n     * Only emits the escape key when reactions are enabled. This prevents a popup dialog which listens for ESC to close\n     * from triggering behaviors elsewhere in the application on ESC.\n     *\n     * For example; you could select multiple items and then open a dialog to multi-edit those items. You would want the\n     * ESC key to close the dialog instead of deselecting the items.\n     *\n     * @todo Maybe a priority setting for binding to hotkeys would be better.\n     */\n    public get esc$(): Observable<void> {\n        return this._keyboard.esc$.pipe(\n            disabledWhen(this._disabled$.pipe(map(Boolean))),\n            mapTo(undefined),\n            takeUntil(this._destroyed$)\n        );\n    }\n\n    /**\n     * The internal ID for emitted events.\n     */\n    private _nextId: number = 1;\n\n    /**\n     * The next ID for emitted events.\n     */\n    public get nextId(): number {\n        return this._nextId;\n    }\n\n    /**\n     * Bootstraps a reaction when it's being created.\n     *\n     * @deprecated use hydrate instead.\n     */\n    public bootstrap(reaction: ReactionObject) {\n        // const reactionDisabled$ = toReactionValue<boolean>(reaction['disabled'], false);\n        // const disabled$ = combineLatest([reactionDisabled$, this.disabled$]).pipe(\n        //     map(([disabledA, disabledB]) => disabledA || disabledB)\n        // );\n        //\n        // const hooks = reaction.hocks.filter(hook => isReactionShortcutOptions(hook)) as ReactionShortcutOptions[];\n        // const events$ = hooks.map(hook => {\n        //     return fromEvent<KeyboardEvent>(this._doc, 'keydown').pipe(\n        //         // only key presses for this hook\n        //         filter(event => event.key.toLowerCase() === hook.code.key\n        //             && event.ctrlKey === hook.code.ctrlKey\n        //             && event.altKey === hook.code.altKey\n        //             && event.shiftKey === hook.code.shiftKey\n        //             && !event.repeat)\n        //     );\n        // });\n        //\n        // merge<KeyboardEvent>(...events$).pipe(\n        //     // disable default even if the hook is disabled (i.e. CTRL+S shouldn't save the web page)\n        //     tap(event => event.preventDefault()),\n        //     disabledWhen(disabled$),\n        //     map<KeyboardEvent, ReactionEvent>(payload => ({id: 0, payload, reaction})),\n        //     // @todo this won't work\n        //     takeUntil(merge(this._destroyed$, reaction.destroyed$))\n        // ).subscribe(event => this._events$.next(event));\n    }\n\n    /**\n     * Disables emitting shortcut events until the observable emits.\n     */\n    public disableUntil(until$: Observable<void>) {\n        this._disabled$.next(this._disabled$.value + 1);\n        until$.pipe(\n            catchError(() => of(undefined)),\n            defaultIfEmpty(undefined),\n            first(),\n            takeUntil(this._destroyed$)\n        ).subscribe(() => this._disabled$.next(this._disabled$.value - 1));\n    }\n\n    /**\n     * Destructor\n     */\n    public ngOnDestroy(): void {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    /**\n     * Broadcasts the event to the application.\n     */\n    public broadcast(reaction: ReactionObject, type: string, payload: any, el?: ElementRef<HTMLElement>, view?: ViewContainerRef) {\n        this._events$.next(new ReactionEvent(this._nextId++, type, reaction, payload, el, view));\n    }\n}\n","import {ElementRef, ViewContainerRef} from '@angular/core';\nimport {ReactionObject} from '../reaction/reaction';\nimport {hydrateReaction} from '../reaction-utils/hydrate-reaction';\n\n/**\n * Base interface for all reaction events.\n */\nexport class ReactionEvent {\n    /**\n     * The element for ReactionModel if emitted from a DOM event.\n     */\n    public readonly el?: ElementRef<HTMLElement>;\n\n    /**\n     * Unique ID for debugging\n     */\n    public readonly id: number;\n\n    /**\n     * The type of event is used to match this object to a method listener on the reaction object.\n     */\n    public readonly type: string;\n\n    /**\n     * The reaction associated with the event.\n     */\n    public readonly reaction: ReactionObject;\n\n    /**\n     * The view for ReactionModel if emitted from a DOM event.\n     */\n    public readonly view?: ViewContainerRef;\n\n    /**\n     * The original event that triggered this event.\n     */\n    private readonly _payload?: any;\n\n    /**\n     * Constructor\n     */\n    public constructor(id: number,\n                       type: string,\n                       reaction: ReactionObject,\n                       payload: any,\n                       el?: ElementRef<HTMLElement>,\n                       view?: ViewContainerRef) {\n        this.id = id;\n        this.type = type;\n        this.reaction = hydrateReaction(reaction);\n        this._payload = payload;\n        this.el = el;\n        this.view = view;\n    }\n\n    /**\n     * The original event that triggered this event.\n     */\n    public payload<TType>(): TType {\n        return this._payload as TType;\n    }\n}\n","import {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, fromEvent, merge, Observable, Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {distinctUntilChanged, filter, takeUntil} from 'rxjs/operators';\n\n/**\n * A service for consuming events from the keyboard.\n */\n@Injectable({providedIn: 'root'})\nexport class ReactionKeyboardService implements OnDestroy {\n    /**\n     * Emits the pressed state of the alt key.\n     */\n    public readonly alt$: Observable<boolean>;\n\n    /**\n     * Emits the pressed state of the ctrl key.\n     */\n    public readonly ctrl$: Observable<boolean>;\n\n    /**\n     * Emits when the ESC is pressed.\n     */\n    public readonly esc$: Observable<void>;\n\n    /**\n     * Emits the pressed state of the shift key.\n     */\n    public readonly shift$: Observable<boolean>;\n\n    /**\n     * Emitter for alt\n     */\n    private readonly _alt$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    /**\n     * Emitter for ctrl\n     */\n    private readonly _ctrl$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    /**\n     * Destructor event\n     */\n    private readonly _destroyed$: Subject<void> = new Subject();\n\n    /**\n     * Emitter for esc\n     */\n    private readonly _esc$: Subject<void> = new Subject();\n\n    /**\n     * Emitter for shift\n     */\n    private readonly _shift$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n    /**\n     * Constructor\n     */\n    public constructor(@Inject(DOCUMENT) private _doc: Document) {\n        merge(fromEvent<KeyboardEvent>(_doc, 'keydown'), fromEvent<KeyboardEvent>(_doc, 'keyup'))\n            .pipe(takeUntil(this._destroyed$))\n            .subscribe(event => {\n                this._ctrl$.next(Boolean(event.ctrlKey));\n                this._alt$.next(Boolean(event.altKey));\n                this._shift$.next(Boolean(event.shiftKey));\n            });\n\n        fromEvent(window, 'blur')\n            .pipe(takeUntil(this._destroyed$))\n            .subscribe(() => {\n                this._ctrl$.next(false);\n                this._alt$.next(false);\n                this._shift$.next(false);\n            });\n\n        fromEvent<KeyboardEvent>(_doc, 'keyup').pipe(\n            filter(event => typeof event.key === 'string' && (event.key.toUpperCase() === 'ESCAPE' || event.key.toUpperCase() === 'ESC')),\n            takeUntil(this._destroyed$)\n        ).subscribe(() => this._esc$.next());\n\n        this.ctrl$ = this._ctrl$.pipe(distinctUntilChanged());\n        this.alt$ = this._alt$.pipe(distinctUntilChanged());\n        this.shift$ = this._shift$.pipe(distinctUntilChanged());\n        this.esc$ = this._esc$.asObservable();\n    }\n\n    /**\n     * Destructor\n     */\n    public ngOnDestroy(): void {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n}\n","import {Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2, ViewContainerRef} from '@angular/core';\nimport {combineLatest, Observable, ReplaySubject, Subject} from 'rxjs';\nimport {distinctUntilChanged, filter, map, pairwise, shareReplay, startWith, switchMap, takeUntil, tap} from 'rxjs/operators';\nimport {ReactionCoreService} from '../reaction-core/reaction-core.service';\nimport {ReactionSnapshot, toReactionSnapshot} from '../reaction-snapshots/reaction-snapshot';\nimport {ReactionState, toReactionState} from '../reaction-state/reaction-state';\nimport {ReactionObject} from '../reaction/reaction';\nimport {ReactionModel} from './reaction-model';\nimport {withMergeMap, withSwitchMap} from '../reaction-utils/observables';\nimport {combineEvents} from '../reaction-utils/combine-events';\nimport {hydrateReaction} from '../reaction-utils/hydrate-reaction';\n\n/**\n * Dependency provider for other components to gain access to the reaction object.\n */\n@Directive({\n    selector: '[rgReaction]',\n    exportAs: 'rgReaction'\n})\nexport class ReactionModelDirective implements OnInit, OnDestroy, ReactionModel {\n    /**\n     * Destructor event\n     */\n    public readonly destroyed$: Subject<void> = new Subject();\n\n    /**\n     * Emits changes to the reaction object.\n     */\n    public reaction$: Observable<ReactionObject>;\n\n    /**\n     * Emits snapshots of the reaction.\n     */\n    public snapshot$: Observable<ReactionSnapshot>;\n\n    /**\n     * Emits the reaction as a state object.\n     */\n    public state$: Observable<ReactionState>;\n\n    /**\n     * Emits the reaction object.\n     */\n    private readonly _reaction$: ReplaySubject<ReactionObject> = new ReplaySubject(1);\n\n    /**\n     * Constructor\n     */\n    public constructor(private _reactionCore: ReactionCoreService,\n                       public readonly el: ElementRef<HTMLElement>,\n                       public readonly view: ViewContainerRef,\n                       private _renderer: Renderer2) {\n    }\n\n    /**\n     * Sets the reaction object.\n     */\n    @Input('rgReaction')\n    public set reaction(reaction: ReactionObject) {\n        console.log('rgReaction setter', reaction);\n        this._reaction$.next(reaction);\n    }\n\n    /**\n     * Destructor\n     */\n    public ngOnDestroy(): void {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    /**\n     * Initialize\n     */\n    public ngOnInit(): void {\n        this.reaction$ = this._reaction$.pipe(\n            tap(val => console.log('reaction$', val)),\n            distinctUntilChanged(),\n            shareReplay(1)\n        );\n\n        this.state$ = this.reaction$.pipe(\n            map(reaction => toReactionState(reaction)),\n            shareReplay(1)\n        );\n\n        this.snapshot$ = this.reaction$.pipe(\n            switchMap(reaction => toReactionSnapshot(reaction)),\n            shareReplay(1)\n        );\n\n        this._renderer.addClass(this.el.nativeElement, 'rg-reaction');\n\n        const toArray = (cond: any, value: string): string[] => cond ? [value] : [];\n        const snapshot$ = this.snapshot$;\n        const styles$ = [\n            snapshot$.pipe(map(s => s.css)),\n            snapshot$.pipe(map(s => toArray(s.icon, 'rg-reaction-icon'))),\n            snapshot$.pipe(map(s => toArray(s.secondary, 'rg-reaction-secondary'))),\n            snapshot$.pipe(map(s => toArray(s.title, 'rg-reaction-title'))),\n            snapshot$.pipe(map(s => toArray(s.tooltip, 'rg-reaction-tooltip'))),\n            snapshot$.pipe(map(s => toArray(s.animate, 'rg-reaction-animate'))),\n            snapshot$.pipe(map(s => toArray(s.disabled, 'rg-reaction-disabled')))\n        ];\n\n        combineLatest(styles$).pipe(\n            // merge all the CSS arrays into a single array\n            map((values) => values.reduce((acc, next) => ([...acc, ...next]), [])),\n            startWith([]),\n            pairwise(),\n            map(([prev, next]: [string[], string[]]) => {\n                return {\n                    add: next.filter(x => !prev.includes(x)),\n                    remove: prev.filter(x => !next.includes(x))\n                };\n            }),\n            takeUntil(this.destroyed$)\n        ).subscribe((change: { add: string[], remove: string[] }) => {\n            change.add.forEach(css => this._renderer.addClass(this.el.nativeElement, css));\n            change.remove.forEach(css => this._renderer.removeClass(this.el.nativeElement, css));\n        });\n\n        this.reaction$.pipe(\n            withSwitchMap(reaction => combineEvents(this.el, hydrateReaction(reaction).__REACTION__)),\n            withMergeMap(([reaction, event]) => toReactionState(reaction).disabled),\n            filter(([value, disabled]) => !disabled),\n            map(([value, disabled]) => value),\n            takeUntil(this.destroyed$)\n        ).subscribe(([reaction, event]) => this._reactionCore.broadcast(reaction, event.type, event, this.el, this.view));\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ReactionObject} from '../reaction/reaction';\nimport {ReactionSnapshot, toReactionSnapshot} from './reaction-snapshot';\n\n@Pipe({name: 'reactionSnapshot', pure: true})\nexport class ReactionSnapshotPipe implements PipeTransform {\n    /**\n     * Creates an observable that emits snapshots of the reaction.\n     */\n    public transform(value: ReactionObject): Observable<ReactionSnapshot> {\n        return typeof value === 'object' ? toReactionSnapshot(value) : undefined;\n    }\n}\n","import {combineLatest, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {toReactionState} from '../reaction-state/reaction-state';\nimport {ReactionObject} from '../reaction/reaction';\nimport {ReactionDescriptionSnapshot} from '../reaction/reaction-description';\nimport {ReactionDisabledSnapshot} from '../reaction/reaction-disabled';\nimport {ReactionIconSnapshot} from '../reaction/reaction-icon';\nimport {ReactionOrderSnapshot} from '../reaction/reaction-order';\nimport {ReactionStyleSnapshot} from '../reaction/reaction-style';\nimport {ReactionTitleSnapshot} from '../reaction/reaction-title';\nimport {ReactionTooltipSnapshot} from '../reaction/reaction-tooltip';\nimport {ReactionVisibleSnapshot} from '../reaction/reaction-visible';\n\n/**\n * A snapshot of the reaction state.\n */\nexport interface ReactionSnapshot extends ReactionDescriptionSnapshot,\n    ReactionDisabledSnapshot,\n    ReactionIconSnapshot,\n    ReactionOrderSnapshot,\n    ReactionStyleSnapshot,\n    ReactionTitleSnapshot,\n    ReactionTooltipSnapshot,\n    ReactionVisibleSnapshot {\n}\n\n/**\n * Creates an observable that emits a snapshots (state object) of a reaction.\n */\nexport function toReactionSnapshot(reaction: ReactionObject): Observable<ReactionSnapshot> {\n    const state$ = toReactionState(reaction);\n\n    const combine$: Observable<{ key: string, value: any }>[] = Object\n        .keys(state$)\n        .map(key => state$[key].pipe(map(value => ({key, value}))));\n\n    return combineLatest(combine$)\n        .pipe(map(values => values.reduce((acc, next) => (acc[next.key] = next.value, acc), {}) as ReactionSnapshot));\n}\n","import {Observable} from 'rxjs';\nimport {defaultIfEmpty, distinctUntilChanged, shareReplay} from 'rxjs/operators';\nimport {ReactionObject} from '../reaction/reaction';\nimport {reactionDescriptionReducer, ReactionDescriptionState} from '../reaction/reaction-description';\nimport {reactionDisabledReducer, ReactionDisabledState} from '../reaction/reaction-disabled';\nimport {reactionIconReducer, ReactionIconState} from '../reaction/reaction-icon';\nimport {reactionOrderReducer, ReactionOrderState} from '../reaction/reaction-order';\nimport {reactionStyleReducer, ReactionStyleState} from '../reaction/reaction-style';\nimport {reactionTitleReducer, ReactionTitleState} from '../reaction/reaction-title';\nimport {reactionTooltipReducer, ReactionTooltipState} from '../reaction/reaction-tooltip';\nimport {reactionVisibleReducer, ReactionVisibleState} from '../reaction/reaction-visible';\n\n/**\n * Combines all the states into a single interface.\n */\nexport interface ReactionState extends ReactionDescriptionState,\n    ReactionDisabledState,\n    ReactionIconState,\n    ReactionOrderState,\n    ReactionStyleState,\n    ReactionTitleState,\n    ReactionTooltipState,\n    ReactionVisibleState {\n}\n\n/**\n * Applies all the reducers to create a state object.\n */\nexport function reactionReducer(acc: ReactionObject, reaction: ReactionObject): ReactionState {\n    acc = reactionDescriptionReducer(acc, reaction);\n    acc = reactionDisabledReducer(acc, reaction);\n    acc = reactionIconReducer(acc, reaction);\n    acc = reactionOrderReducer(acc, reaction);\n    acc = reactionStyleReducer(acc, reaction);\n    acc = reactionTitleReducer(acc, reaction);\n    acc = reactionTooltipReducer(acc, reaction);\n    return reactionVisibleReducer(acc, reaction) as ReactionState;\n}\n\n/**\n * Applies operators to all of the object properties.\n */\nexport function reactionSharable(state: ReactionState): ReactionState {\n    const lift = (source: Observable<any>) => source.pipe(\n        defaultIfEmpty(undefined),\n        distinctUntilChanged(),\n        shareReplay(1)\n    );\n    return Object.keys(state).reduce((acc, key) => (acc[key] = lift(state[key]), acc), {}) as ReactionState;\n}\n\n/**\n * Converts a reaction object into a ReactionStates object.\n */\nexport function toReactionState(reaction: ReactionObject): ReactionState {\n    return reactionSharable(reactionReducer({}, reaction));\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJyYXJ5L3JlYWN0aW9ucy9zcmMvcmVhY3Rpb24tdGV4dC9yZWFjdGlvbi10ZXh0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ReactionSnapshot} from '../reaction-snapshots/reaction-snapshot';\n\n/**\n * Displays the body of a reaction control. Mostly the icon and title.\n */\n@Component({\n    selector: 'rg-reaction-text',\n    templateUrl: './reaction-text.component.html',\n    styleUrls: ['./reaction-text.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReactionTextComponent implements OnChanges {\n    /***\n     * Show the icon\n     */\n    @Input()\n    public icon: boolean = true;\n\n    /**\n     * Show the secondary icon\n     */\n    @Input()\n    public secondary: boolean = true;\n\n    /**\n     * Snapshot of the reaction\n     */\n    @Input()\n    public snapshot: ReactionSnapshot;\n\n    /**\n     * Show the title\n     */\n    @Input()\n    public title: boolean = true;\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        console.log({changes});\n    }\n}\n","import {ElementRef} from '@angular/core';\nimport {fromEvent, merge, Observable} from 'rxjs';\nimport {throttleTimeIf} from './observables';\nimport {tap} from 'rxjs/operators';\nimport {ReactionEventBinding} from '../reaction/reaction';\n\nexport function combineEvents(el: ElementRef<HTMLElement>, hooks: ReactionEventBinding[]): Observable<UIEvent> {\n    const events$ = hooks.map(({type, debounce}) => fromEvent<UIEvent>(el.nativeElement, type)\n        .pipe(throttleTimeIf(Boolean(debounce), debounce)));\n    return merge<UIEvent>(...events$).pipe(\n        tap(event => event.preventDefault())\n    );\n}\n","import {ReactionConstructor, ReactionObject} from '../reaction/reaction';\n\n/**\n * Copies the properties defined by the decorator to a reaction instance.\n */\nexport function hydrateReaction(reaction: ReactionObject): ReactionObject {\n    const func = reaction.constructor as ReactionConstructor;\n    if (func && func.__REACTION__) {\n        Object.keys(func.__REACTION__)\n            .filter(key => !reaction.hasOwnProperty(key))\n            .reduce((acc, key) => (acc[key] = func.__REACTION__[key], acc), reaction);\n        delete func.__REACTION__;\n    }\n    if (!reaction.__REACTION__) {\n        reaction.__REACTION__ = [];\n    }\n    return reaction;\n}\n","import {isObservable, MonoTypeOperatorFunction, Observable, of, OperatorFunction} from 'rxjs';\nimport {defaultIfEmpty, distinctUntilChanged, filter, map, mergeMap, switchMap, throttleTime, withLatestFrom} from 'rxjs/operators';\n\n/**\n * Converts the parameter to an observable, or returns the value if already an observable.\n */\nexport function toObservable<TType>(value: TType | Observable<TType>): Observable<TType> {\n    return isObservable(value) ? value : of(value);\n}\n\n/**\n * Emits the inner observable value with the outer observable value as a pair array.\n */\nexport function withSwitchMap<T, R>(inner: (T) => Observable<R>): OperatorFunction<T, [T, R]> {\n    return (source: Observable<T>): Observable<[T, R]> => {\n        return source.pipe(\n            switchMap(a => inner(a).pipe(map(b => [a, b] as [T, R])))\n        );\n    }\n}\n\n/**\n * Emits the inner observable value with the outer observable value as a pair array.\n */\nexport function withMergeMap<T, R>(inner: (T) => Observable<R>): OperatorFunction<T, [T, R]> {\n    return (source: Observable<T>): Observable<[T, R]> => {\n        return source.pipe(\n            mergeMap(a => inner(a).pipe(map(b => [a, b] as [T, R])))\n        );\n    }\n}\n\n/**\n * Conditionally apply a throttle time operator.\n */\nexport function throttleTimeIf<T>(cond: boolean, duration: number): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>): Observable<T> => {\n        return cond ? source.pipe(throttleTime(duration)) : source;\n    }\n}\n\n/**\n * Maps values to an inverted boolean.\n */\nexport function negate(): MonoTypeOperatorFunction<boolean> {\n    return (source: Observable<any>): Observable<boolean> => source.pipe(map(val => !val));\n}\n\n/**\n * Disables emitting of values while the passed observable emits true.\n */\nexport function disabledWhen<T>(disabled: Observable<boolean>): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>): Observable<T> => {\n        return source.pipe(\n            withLatestFrom(disabled.pipe(\n                defaultIfEmpty(false),\n                map(Boolean),\n                distinctUntilChanged()\n            )),\n            filter(([value, disabled]) => !disabled),\n            map(([value]) => value)\n        );\n    };\n}\n\n/**\n * Enables emitting of values while the passed observable emits true.\n */\nexport function enabledWhen<TType>(enabled: Observable<boolean>): MonoTypeOperatorFunction<TType> {\n    return (source: Observable<TType>): Observable<TType> => source.pipe(disabledWhen(enabled.pipe(negate())));\n}\n","import {Observable, of} from 'rxjs';\nimport {toObservable} from './observables';\n\n/**\n * Converts the value to an observable. If the value is a function it is called recursively until a literal or observable\n * is returned.\n */\nexport function toReactionValue<TType>(value: any, _default: TType = undefined): Observable<TType> {\n    if (value === undefined) {\n        return of(_default);\n    }\n    if (typeof value === 'function') {\n        return toReactionValue(value(), _default);\n    }\n    return toObservable(value);\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Description of the reaction.\n */\nexport interface ReactionDescription {\n    /**\n     * A description of this reaction used in the shortcut dialog.\n     */\n    description: ReactionProperty<string>;\n}\n\n/**\n * State object for ReactionDescription\n */\nexport interface ReactionDescriptionState {\n    /**\n     * A description of this reaction used in the shortcut dialog.\n     */\n    description: Observable<string>;\n}\n\n/**\n * Snapshot object for ReactionDescription\n */\nexport interface ReactionDescriptionSnapshot {\n    /**\n     * A description of this reaction used in the shortcut dialog.\n     */\n    description: string;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionDescriptionReducer(acc: ReactionObject, next: ReactionObject | ReactionDescription): ReactionObject {\n    const description = toReactionValue(next.description);\n    return {...acc, description};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Adds support for disabling a reaction.\n */\nexport interface ReactionDisabled {\n    /**\n     * Emits the disabled state of a tool.\n     */\n    disabled: ReactionProperty<boolean>;\n}\n\n/**\n * State object for ReactionDisabled\n */\nexport interface ReactionDisabledState {\n    /**\n     * Disabled state\n     */\n    disabled: Observable<boolean>;\n}\n\n/**\n * Snapshot of disabled\n */\nexport interface ReactionDisabledSnapshot {\n    /**\n     * Disabled state\n     */\n    disabled: boolean;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionDisabledReducer(acc: ReactionObject, next: ReactionObject | ReactionDisabled): ReactionObject {\n    const disabled = toReactionValue(next.disabled, false);\n    return {...acc, disabled};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Supported types of animation.\n *\n * These are currently limited to what FontAwesome supports.\n */\nexport enum ReactionIconAnimate {\n    SPIN = 'spin',\n    PULSE = 'pulse'\n}\n\n/**\n * Adds support for showing an icon.\n */\nexport interface ReactionIcon {\n    /**\n     * Emits the animation state of the tool. Can be \"spin\" or \"pulse\" or undefined.\n     */\n    animate?: ReactionProperty<ReactionIconAnimate>;\n\n    /**\n     * The visual icon for the tool.\n     */\n    icon: ReactionProperty<string>;\n\n    /**\n     * Secondary icon shown after the text.\n     */\n    secondary?: ReactionProperty<string>;\n\n    /**\n     * Emits the animation state of the tool. Can be \"spin\" or \"pulse\" or undefined.\n     */\n    secondaryAnimate?: ReactionProperty<ReactionIconAnimate>;\n}\n\n/**\n * State object for ReactionIcon\n */\nexport interface ReactionIconState {\n    /**\n     * Animation state\n     */\n    animate: Observable<ReactionIconAnimate>;\n\n    /**\n     * Icon state\n     */\n    icon: Observable<string>;\n\n    /**\n     * Secondary state\n     */\n    secondary: Observable<string>;\n\n    /**\n     * Animation state\n     */\n    secondaryAnimate: Observable<ReactionIconAnimate>;\n}\n\n/**\n * Snapshot of icon state\n */\nexport interface ReactionIconSnapshot {\n    /**\n     * Animation state\n     */\n    animate: ReactionIconAnimate;\n\n    /**\n     * Icon state\n     */\n    icon: string;\n\n    /**\n     * Secondary state\n     */\n    secondary: string;\n\n    /**\n     * Animation state\n     */\n    secondaryAnimate: ReactionIconAnimate;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionIconReducer(acc: ReactionObject, next: ReactionObject | ReactionIcon): ReactionObject {\n    const icon = toReactionValue(next.icon);\n    const animate = toReactionValue(next.animate);\n    const secondary = toReactionValue(next.secondary);\n    const secondaryAnimate = toReactionValue(next.secondaryAnimate);\n    return {...acc, icon, animate, secondary, secondaryAnimate};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Defines the order of this reaction in a sorted list.\n */\nexport interface ReactionOrder {\n    /**\n     * A sort value usually in the format \"XXXX:0000\" where the \":\" is used to separate reactions into\n     * groups.\n     */\n    order: ReactionProperty<string>;\n}\n\n/**\n * State object for ReactionOrder\n */\nexport interface ReactionOrderState {\n    order: Observable<string>;\n}\n\n/**\n * Snapshot of icon state\n */\nexport interface ReactionOrderSnapshot {\n    order: string;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionOrderReducer(acc: ReactionObject, next: ReactionObject | ReactionOrder): ReactionObject {\n    const order = toReactionValue(next.order, '0');\n    return {...acc, order};\n}\n","import {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Adds support for applying CSS styles to a reaction.\n */\nexport interface ReactionStyle {\n    /**\n     * Emits CSS styles for the reaction component.\n     */\n    css: ReactionProperty<string | string[] | void>;\n}\n\n/**\n * State object for ReactionStyle\n */\nexport interface ReactionStyleState {\n    /**\n     * CSS state\n     */\n    css: Observable<string[]>;\n}\n\n/**\n * Snapshot of styles\n */\nexport interface ReactionStyleSnapshot {\n    /**\n     * CSS state\n     */\n    css: string[];\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionStyleReducer(acc: ReactionObject, next: ReactionObject | ReactionStyle): ReactionObject {\n    const css = toReactionValue<string | string[] | void>(next.css).pipe(\n        map((value: string | string[] | void) => {\n            const values: string[] = typeof value === 'string' ? value.split(' ') : (value || []);\n            return Array.from(new Set(values.map(str => str.trim()).filter(Boolean)));\n        })\n    );\n    return {...acc, css};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * A display title for a reaction. All reactions should have a title. If none is provided then \"n/a\" will be the default.\n */\nexport interface ReactionTitle {\n    /**\n     * The title shown in the body of a button or menu item.\n     */\n    title: ReactionProperty<string>;\n}\n\n/**\n * State object for Reaction\n */\nexport interface ReactionTitleState {\n    /**\n     * Title state\n     */\n    title: Observable<string>;\n}\n\n/**\n * Snapshot of reaction.\n */\nexport interface ReactionTitleSnapshot {\n    /**\n     * Title state\n     */\n    title: string;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionTitleReducer(acc: ReactionObject, next: ReactionObject | ReactionTitle): ReactionObject {\n    const title = toReactionValue(next.title, 'n/a');\n    return {...acc, title};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Tooltip settings for a reaction.\n */\nexport interface ReactionTooltip {\n    /**\n     * The tooltip shown when mouse hovering.\n     */\n    tooltip: ReactionProperty<string>;\n}\n\n/**\n * State object for ReactionTooltip\n */\nexport interface ReactionTooltipState {\n    /**\n     * Tooltip state\n     */\n    tooltip: Observable<string>;\n}\n\n/**\n * Snapshot of tooltip.\n */\nexport interface ReactionTooltipSnapshot {\n    /**\n     * Tooltip state\n     */\n    tooltip: string;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionTooltipReducer(acc: ReactionObject, next: ReactionObject | ReactionTooltip): ReactionObject {\n    const tooltip = toReactionValue(next.tooltip);\n    return {...acc, tooltip};\n}\n","import {Observable} from 'rxjs';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionObject} from './reaction';\nimport {toReactionValue} from '../reaction-utils/reaction-value';\n\n/**\n * Adds support for showing/hiding a reaction.\n */\nexport interface ReactionVisible {\n    /**\n     * Emits if the tool should be shown.\n     */\n    visible: ReactionProperty<boolean>;\n}\n\n/**\n * State object for ReactionVisible\n */\nexport interface ReactionVisibleState {\n    /**\n     * Visible state\n     */\n    visible: Observable<boolean>;\n}\n\n/**\n * Snapshot of visible state\n */\nexport interface ReactionVisibleSnapshot {\n    /**\n     * Visible state\n     */\n    visible: boolean;\n}\n\n/**\n * Updates a state object with more observable properties from the reaction.\n */\nexport function reactionVisibleReducer(acc: ReactionObject, next: ReactionObject | ReactionVisible): ReactionObject {\n    const visible = toReactionValue(next.visible, true);\n    return {...acc, visible};\n}\n","import {Injectable, Type} from '@angular/core';\nimport {ReactionProperty} from '../reaction-types';\nimport {ReactionEvent} from '../reaction-event/reaction-event';\n\n/**\n * Configuration for a reaction class decorator.\n */\nexport interface ReactionClassOptions extends ReactionProperties {\n    /**\n     * Where the class is provided.\n     */\n    providedIn?: Type<any> | 'root' | null;\n}\n\n/**\n * Defines object properties for a reaction.\n */\nexport interface ReactionProperties extends Object {\n    /**\n     * A map of codes to event listeners. These will be converted into hooks.\n     */\n    events?: { [code: string]: (event: ReactionEvent) => void };\n\n    /**\n     * A dynamic reaction value.\n     */\n    [name: string]: ReactionProperty<any>;\n}\n\n/**\n * Defines a reaction object. Includes definitions for meta data attached by decorators.\n */\nexport interface ReactionObject extends ReactionProperties {\n    /**\n     * The event hooks attached to the reaction. These are created by the events property or by method decorators. It\n     * will exist only after the reaction is added to the core service.\n     */\n    __REACTION__?: ReactionEventBinding[];\n}\n\n/**\n * Configured hook that triggers a reaction event listener.\n */\nexport interface ReactionEventBinding {\n    /**\n     * Applies a throttle operator to events to reduce their emission rate.\n     */\n    debounce?: number;\n\n    /**\n     * The type of event (click, mousemove, shortcut)\n     */\n    type: string;\n\n    /**\n     * Method to be triggered\n     */\n    method: (event: ReactionEvent) => void;\n}\n\n/**\n * Defines a constructor function with meta data attached.\n */\nexport type ReactionConstructor = { new(...args: any[]): any, __REACTION__?: ReactionProperties };\n\n/**\n * Sets the meta data on the constructor function.\n */\nexport const reactionMetaData = <TFunction extends ReactionConstructor>(\n    clss: TFunction,\n    options: ReactionClassOptions\n): TFunction => {\n    options = {...options};\n    delete options.providedIn;\n    return (clss.__REACTION__ = options, clss);\n};\n\n/**\n * Calls the injectable decorator from Angular.\n */\nexport const reactionInjectable = <TFunction extends ReactionConstructor>(\n    clss: TFunction,\n    options: ReactionClassOptions\n): TFunction => options.hasOwnProperty('providedIn')\n    ? Injectable({providedIn: options.providedIn})(clss) as TFunction\n    : Injectable()(clss) as TFunction;\n\n/**\n * Defines a class decorator function that supports a reaction constructor signature.\n */\nexport type ReactionClassDecorator = (ReactionConstructor) => ReactionConstructor;\n\n/**\n * Reaction decorator for classes.\n */\nexport function Reaction(options: ReactionClassOptions): ReactionClassDecorator;\n\n/**\n * Reaction decorator for methods.\n */\nexport function Reaction(type: string, debounce?: number): MethodDecorator;\n\n/**\n * Applies the required decorator based upon the argument types.\n */\nexport function Reaction(...args: any[]): ReactionClassDecorator | MethodDecorator {\n    if (args.length === 1 && typeof args[0] === 'object') {\n        return reactionClass(args[0]);\n    } else if (args.length >= 1 && args.length <= 2 && typeof args[0] === 'string') {\n        return reactionMethod(args[0], args.length === 2 ? args[1] : 0);\n    }\n}\n\n/**\n * The class decorator function.\n */\nexport function reactionClass(options: ReactionClassOptions): ReactionClassDecorator {\n    return <ReactionConstructor>(func) => reactionInjectable(reactionMetaData(func, options), options);\n}\n\n/**\n * The method decorator function.\n */\nexport function reactionMethod(type: string, debounce: number): MethodDecorator {\n    return (target: ReactionObject, methodName: string, descriptor: TypedPropertyDescriptor<any>) => {\n        if (!target.__REACTION__) {\n            target.__REACTION__ = [];\n        }\n        if (typeof target[methodName] === 'function') {\n            target.__REACTION__.push({type, debounce, method: target[methodName]});\n        }\n        return descriptor;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule, MatMenuModule, MatTooltipModule} from '@angular/material';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {ReactionModelDirective} from './reaction-model/reaction-model.directive';\nimport {ReactionSnapshotPipe} from './reaction-snapshots/reaction-snapshot.pipe';\nimport {ReactionTextComponent} from './reaction-text/reaction-text.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTooltipModule,\n        MatButtonModule,\n        FontAwesomeModule\n    ],\n    declarations: [\n        ReactionModelDirective,\n        ReactionSnapshotPipe,\n        ReactionTextComponent\n    ],\n    providers: [\n        ReactionSnapshotPipe\n    ],\n    exports: [\n        ReactionModelDirective,\n        ReactionSnapshotPipe,\n        ReactionTextComponent\n    ]\n})\nexport class ReactionsModule {\n}\n","module.exports = \"<ng-container *ngIf=\\\"snapshot\\\">\\n  <fa-icon *ngIf=\\\"icon && snapshot.icon\\\"\\n           class=\\\"rg-reaction-icon\\\"\\n           [fixedWidth]=\\\"true\\\"\\n           [icon]=\\\"snapshot.icon\\\"\\n           [pulse]=\\\"snapshot.animate === 'pulse'\\\"\\n           [spin]=\\\"snapshot.animate === 'spin'\\\"></fa-icon>\\n  <span *ngIf=\\\"title\\\"\\n        class=\\\"rg-reaction-text\\\">{{snapshot.title}}</span>\\n  <fa-icon *ngIf=\\\"secondary && snapshot.secondary\\\"\\n           class=\\\"rg-reaction-secondary\\\"\\n           [fixedWidth]=\\\"true\\\"\\n           [icon]=\\\"snapshot.secondary\\\"></fa-icon>\\n</ng-container>\\n\"","module.exports = \"<p>\\n  demo-card works!\\n</p>\\n\"","module.exports = \"<div class=\\\"container m-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <button *ngFor=\\\"let reaction of reactions\\\"\\n              [rgReaction]=\\\"reaction\\\" #rgReaction=\\\"rgReaction\\\">\\n        <rg-reaction-text [icon]=\\\"false\\\"\\n                          [snapshot]=\\\"rgReaction.snapshot$ | async\\\"></rg-reaction-text>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ReactionsModule} from '../../library/reactions/src/reactions.module';\nimport {DemoComponent} from './demo/demo.component';\nimport {DemoCardComponent} from './demo-card/demo-card.component';\nimport {LoggerModule} from '@reactgular/logger';\nimport {environment} from '../environments/environment';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        ReactiveFormsModule,\n        ReactionsModule,\n        MatButtonModule,\n        LoggerModule.forRoot({enabled: !environment.production})\n    ],\n    declarations: [\n        DemoComponent,\n        DemoCardComponent\n    ],\n    providers: [],\n    bootstrap: [\n        DemoComponent\n    ]\n})\nexport class AppModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8tY2FyZC9kZW1vLWNhcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n@Component({\n    selector: 'rg-demo-card',\n    templateUrl: './demo-card.component.html',\n    styleUrls: ['./demo-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DemoCardComponent {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vZGVtby5jb21wb25lbnQuc2NzcyJ9 */\"","import {ChangeDetectionStrategy, Component, Inject, InjectionToken, OnDestroy, OnInit} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {ReactionCoreService} from '../../../library/reactions/src/reaction-core/reaction-core.service';\nimport {CreateReaction} from '../reactions/create-reaction/create-reaction';\nimport {LogService} from '@reactgular/logger';\n\nexport const TOP_BAR_TOKEN: InjectionToken<any> = new InjectionToken<any>('TOP_BAR_TOKEN');\n\n@Component({\n    selector: 'rg-demo',\n    templateUrl: './demo.component.html',\n    styleUrls: ['./demo.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {provide: TOP_BAR_TOKEN, useClass: CreateReaction, multi: true}\n    ]\n})\nexport class DemoComponent implements OnInit, OnDestroy {\n    /**\n     * Destructor event\n     */\n    private readonly _destroyed$: Subject<void> = new Subject();\n\n    private readonly _log: LogService;\n\n    /**\n     * Constructor\n     */\n    public constructor(@Inject(TOP_BAR_TOKEN) public reactions: unknown[],\n                       private _reactionCore: ReactionCoreService,\n                       log: LogService) {\n        this._log = log.withPrefix(DemoComponent.name);\n        this._log.info({reactions});\n    }\n\n    /**\n     * Destructor\n     */\n    public ngOnDestroy(): void {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n    }\n\n    /**\n     * Initialization\n     */\n    public ngOnInit(): void {\n        this._reactionCore.events$.pipe(\n            this._log.tap().log('events'),\n            takeUntil(this._destroyed$)\n        ).subscribe(event => console.log('Demo:', event));\n    }\n}\n","import {Observable} from 'rxjs';\nimport {ReactionEvent} from '../../../../library/reactions/src/reaction-event/reaction-event';\nimport {ReactionIcon} from '../../../../library/reactions/src/reaction/reaction-icon';\nimport {ReactionTitle} from '../../../../library/reactions/src/reaction/reaction-title';\nimport {LogService} from '@reactgular/logger';\nimport {Reaction} from '../../../../library/reactions/src/reaction/reaction';\n\n@Reaction({order: 'demo:000'})\nexport class CreateReaction implements ReactionTitle, ReactionIcon {\n    private readonly _log: LogService;\n\n    public constructor(log: LogService) {\n        this._log = log.withPrefix(CreateReaction.name);\n        this._log.info('constructor');\n    }\n\n    // @ReactionHook('click')\n    public click(event: ReactionEvent) {\n        this._log.info('click', event);\n    }\n\n    /**\n     * Gets the icon state\n     */\n    public icon(): Observable<string> | string {\n        return 'fa-plus';\n    }\n\n    /**\n     * Gets the title state\n     */\n    public title(): Observable<string> | string {\n        return 'Create';\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":""}